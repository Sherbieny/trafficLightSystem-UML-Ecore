/**
 */
package Systesh.impl;

import Systesh.SysteshPackage;
import Systesh.Timer;

import java.lang.reflect.InvocationTargetException;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Timer</b></em>'.
 * <!-- end-user-doc -->
 *
 * @generated
 */
public class TimerImpl extends MinimalEObjectImpl.Container implements Timer {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimerImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return SysteshPackage.Literals.TIMER;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated not 	
	 */
	/*
	 * I don't know how to implement a timer
	 * */
	public int tick_count = 0;
	public int tick() {
		tick_count += 1;
		return tick_count;
	}
	
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated not
	 */
	public void timer_reset() {
		ControllerImpl cont = new ControllerImpl();
		cont.time = 0;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eInvoke(int operationID, EList<?> arguments) throws InvocationTargetException {
		switch (operationID) {
			case SysteshPackage.TIMER___TICK:
				Tick();
				return null;
			case SysteshPackage.TIMER___TIMER_RESET:
				timer_reset();
				return null;
		}
		return super.eInvoke(operationID, arguments);
	}

} //TimerImpl
